"""
This file contains all options that can be passed
to either `main.py` or `sample.py`.
"""


def model_opts(parser):
    """
    These options are passed to the construction of the model.
    Be careful with these as they will be used during translation.
    """

    # Generator Options
    group = parser.add_argument_group('Generator')
    group.add_argument('-embedding_size', type=int, default=32,
                       help='Embedding size')
    group.add_argument('-hidden_size', type=int, default=1024,
                       help='Hidden size')
    group.add_argument('-vocab_size', type=int, default=-1)
    group.add_argument('-sampling_strategy', type=str,
                       default='multinomial',
                       choices=['argmax', 'multinomial'],
                       help='How to sample'
                       )
    group.add_argument('-cuda', action='store_true',
                       help='Use GPU (error will be raised if it is unavailable')

    # TODO: pretrained embeddings


def training_opts(parser):
    """
    Options for training.
    """
    group = parser.add_argument_group('Training')

    group.add_argument('-batch_size', type=int, default=128,
                       help='Batch size')
    group.add_argument('-learning_rate', type=float, default=0.0005,
                       help='Learning rate')
    group.add_argument('-clip_grad', type=float, default=2.0,
                       help='Clip gradients if their l2 norm above threshold')
    group.add_argument('-n_epochs', type=int, default=20,
                       help='Total traini—Çg epochs')
    group.add_argument('-tensorboard', action='store_true',
                       help='Use tensorboard logging')
    group.add_argument('-log_file_dir', type=str, default='./logs',
                       help="""
                       Path to tebsorboard log directory (the file name)
                       will be consistent with the checkpoint name""")


def model_io_opts(parser):
    """
    Input-Output options: checkpoint
    """
    group = parser.add_argument_group('ModelIO')

    group.add_argument('-save', action='store_true',
                       help='Not save the model (helpful for debug)')
    group.add_argument('-path', type=str, default='./model',
                       help="""Path to save the model. The path name
                       will be modified with info about model, epoch and loss
                       """)
    group.add_argument('-checkpoint', type=str, default='',
                       help='Path to checkpoint. If not specified, training starts from scratch')


def data_opts(parser):
    """
    Data options.
    """
    group = parser.add_argument_group('Data')

    group.add_argument('-data_path', type=str, required=True,
                       help='Path to data (plain text file)')
    group.add_argument('-vocab_path', type=str, required=True,
                       help='Path to vocab .pt file generated by vocab.py')

